--- a/net/minecraft/world/entity/ai/attributes/AttributeInstance.java
+++ b/net/minecraft/world/entity/ai/attributes/AttributeInstance.java
@@ -149,24 +_,31 @@
         return this.cachedValue;
     }
 
+    // Paper start - Update attributes related to equipment in case changes were made
+    public double getValue(net.minecraft.world.entity.LivingEntity entity) {
+        entity.detectEquipmentUpdatesPublic();
+        return getValue();
+    }
+    // Paper end - Update attributes related to equipment in case changes were made
+
     private double calculateValue() {
         double baseValue = this.getBaseValue();
 
         for (AttributeModifier attributeModifier : this.getModifiersOrEmpty(AttributeModifier.Operation.ADD_VALUE)) {
-            baseValue += attributeModifier.amount();
+            baseValue += attributeModifier.amount(); // Paper - destroy speed API - diff on change
         }
 
         double d = baseValue;
 
         for (AttributeModifier attributeModifier1 : this.getModifiersOrEmpty(AttributeModifier.Operation.ADD_MULTIPLIED_BASE)) {
-            d += baseValue * attributeModifier1.amount();
+            d += baseValue * attributeModifier1.amount(); // Paper - destroy speed API - diff on change
         }
 
         for (AttributeModifier attributeModifier1 : this.getModifiersOrEmpty(AttributeModifier.Operation.ADD_MULTIPLIED_TOTAL)) {
-            d *= 1.0 + attributeModifier1.amount();
+            d *= 1.0 + attributeModifier1.amount(); // Paper - destroy speed API - diff on change
         }
 
-        return this.attribute.value().sanitizeValue(d);
+        return this.attribute.value().sanitizeValue(d); // Paper - destroy speed API - diff on change
     }
 
     private Collection<AttributeModifier> getModifiersOrEmpty(AttributeModifier.Operation operation) {
